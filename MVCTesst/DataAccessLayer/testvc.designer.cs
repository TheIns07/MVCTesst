#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVCTesst.DataAccessLayer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="testC")]
	public partial class testvcDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertalumno(alumno instance);
    partial void Updatealumno(alumno instance);
    partial void Deletealumno(alumno instance);
    partial void Insertmateria(materia instance);
    partial void Updatemateria(materia instance);
    partial void Deletemateria(materia instance);
    #endregion
		
		public testvcDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["testCConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public testvcDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public testvcDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public testvcDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public testvcDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<alumno> alumnos
		{
			get
			{
				return this.GetTable<alumno>();
			}
		}
		
		public System.Data.Linq.Table<materia> materias
		{
			get
			{
				return this.GetTable<materia>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.alumno")]
	public partial class alumno : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nombre;
		
		private string _apellido;
		
		private int _idmateria;
		
		private EntityRef<materia> _materia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnapellidoChanging(string value);
    partial void OnapellidoChanged();
    partial void OnidmateriaChanging(int value);
    partial void OnidmateriaChanged();
    #endregion
		
		public alumno()
		{
			this._materia = default(EntityRef<materia>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apellido", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string apellido
		{
			get
			{
				return this._apellido;
			}
			set
			{
				if ((this._apellido != value))
				{
					this.OnapellidoChanging(value);
					this.SendPropertyChanging();
					this._apellido = value;
					this.SendPropertyChanged("apellido");
					this.OnapellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idmateria", DbType="Int NOT NULL")]
		public int idmateria
		{
			get
			{
				return this._idmateria;
			}
			set
			{
				if ((this._idmateria != value))
				{
					if (this._materia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidmateriaChanging(value);
					this.SendPropertyChanging();
					this._idmateria = value;
					this.SendPropertyChanged("idmateria");
					this.OnidmateriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="materia_alumno", Storage="_materia", ThisKey="idmateria", OtherKey="id", IsForeignKey=true)]
		public materia materia
		{
			get
			{
				return this._materia.Entity;
			}
			set
			{
				materia previousValue = this._materia.Entity;
				if (((previousValue != value) 
							|| (this._materia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._materia.Entity = null;
						previousValue.alumnos.Remove(this);
					}
					this._materia.Entity = value;
					if ((value != null))
					{
						value.alumnos.Add(this);
						this._idmateria = value.id;
					}
					else
					{
						this._idmateria = default(int);
					}
					this.SendPropertyChanged("materia");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.materia")]
	public partial class materia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nombre;
		
		private string _departamento;
		
		private EntitySet<alumno> _alumnos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OndepartamentoChanging(string value);
    partial void OndepartamentoChanged();
    #endregion
		
		public materia()
		{
			this._alumnos = new EntitySet<alumno>(new Action<alumno>(this.attach_alumnos), new Action<alumno>(this.detach_alumnos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="NChar(50)")]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_departamento", DbType="NChar(50)")]
		public string departamento
		{
			get
			{
				return this._departamento;
			}
			set
			{
				if ((this._departamento != value))
				{
					this.OndepartamentoChanging(value);
					this.SendPropertyChanging();
					this._departamento = value;
					this.SendPropertyChanged("departamento");
					this.OndepartamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="materia_alumno", Storage="_alumnos", ThisKey="id", OtherKey="idmateria")]
		public EntitySet<alumno> alumnos
		{
			get
			{
				return this._alumnos;
			}
			set
			{
				this._alumnos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_alumnos(alumno entity)
		{
			this.SendPropertyChanging();
			entity.materia = this;
		}
		
		private void detach_alumnos(alumno entity)
		{
			this.SendPropertyChanging();
			entity.materia = null;
		}
	}
}
#pragma warning restore 1591
